; This file was initially adapated from the output of: (on PHP 5.6)
;   grep -vE '^;|^ *$' /usr/local/etc/php-fpm.conf.default

[global]

error_log = /var/log/php-fpm/error.log
daemonize = no

[www]

; if we send this to /proc/self/fd/1, it never appears
access.log = /var/log/php-fpm/access.log

user = www-data
group = www-data

listen = 9000

pm = dynamic
pm.max_children = 25          # 在同一时间最大的进程数
pm.start_servers = 2          # php-fpm启动时开启的等待请求到来的进程数，默认值为：min_spare_servers + (max_spare_servers - min_spare_servers) / 2
pm.min_spare_servers = 1      # 在空闲状态下，运行的最小进程数，如果小于此值，会创建新的进程
pm.max_spare_servers = 25     # 在空闲状态下，运行的最大进程数，如果大于此值，会kill部分进程
pm.process_idle_timeout = 10s # 空闲多少秒之后进程会被kill，默认为10s
pm.max_requests = 5000        # 每个进程处理多少个请求之后自动终止，可以有效防止内存溢出，如果为0则不会自动终止，默认为0

pm.status_path = /status      # 注册的URI，以展示php-fpm状态的统计信息
# 统计页面信息有:
# pool                         进程池名称
# process manager              进程管理器名称（static, dynamic or ondemand）
# start time                   php-fpm启动时间
# start since                  php-fpm启动的总秒数
# accepted conn                当前进程池接收的请求数
# listen queue                 等待队列的请求数
# max listen queue             自启动以来等待队列中最大的请求数
# listen queue len             等待连接socket队列大小
# idle processes               当前空闲的进程数
# active processes             活动的进程数
# total processes              总共的进程数（idle+active）
# max active processes         自启动以来活动的进程数最大值
# max children reached         达到最大进程数的次数

ping.path = /ping              # ping url，可以用来测试php-fpm是否存活并可以响应
ping.response = pong           # ping url的响应正文


env[MYSQL_PORT_3306_TCP] = $MYSQL_PORT_3306_TCP
env[MYSQL_PORT_3306_TCP_PROTO] = $MYSQL_PORT_3306_TCP_PROTO
env[MYSQL_PORT_3306_TCP_ADDR] = $MYSQL_PORT_3306_TCP_ADDR
env[MYSQL_PORT_3306_TCP_PORT] = $MYSQL_PORT_3306_TCP_PORT
env[MYSQL_ENV_MYSQL_ROOT_PASSWORD] = $MYSQL_ENV_MYSQL_ROOT_PASSWORD
